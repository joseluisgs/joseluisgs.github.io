(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{618:function(e,a,o){"use strict";o.r(a);var t=o(15),r=Object(t.a)({},(function(){var e=this,a=e.$createElement,o=e._self._c||a;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("p",[e._v("Una de las cosas con las que m치s c칩mo me siento es con la facilidad con la que usando Javascript y Typescript puedo desarrollar cualquier tipo de producto, desde el back hasta el front hasta pasando por dispositivos m칩viles o aplicaciones de Alexa. En este entrada te comento a nivel did치ctico distintos proyectos usados y librer칤as para aprender a montarte tu propio back-end para que consuman tu API REST.")]),e._v(" "),o("h2",{attrs:{id:"tu-api-rest"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#tu-api-rest"}},[e._v("#")]),e._v(" Tu API REST")]),e._v(" "),o("p",[e._v("Cuando creamos una API REST tenemos muchas tecnolog칤as y opciones para poder realizarla con 칠xito. Hay tantas, que depender치 de la naturaleza del problema cu치l debas elegir. Ya sea con Typescript o Javascript sobre Node.js debes pensar c칩mo y de qu칠 manera estructurar tu c칩digo. Ya uses MongDB, Amazon, MariaDB o Firebase, hacerte tu propio Back te va a dar el control de c칩mo y de qu칠 manera acceden a tus recursos desde cualquier dispositivo.")]),e._v(" "),o("p",[e._v("En esta entrada te mostrar칠 distintas tecnolog칤as y proyectos usados de ejemplos con el alumnado o a nivel personal donde se integran distintas opciones. Algunas, ya ver치s se ir치n repitiendo en ellos como un patr칩n base a seguir")]),e._v(" "),o("p",{staticStyle:{"text-align":"center"}},[o("img",{staticStyle:{"border-radius":"0.25rem"},attrs:{loading:"lazy",src:"https://blog.boardinfinity.com/content/images/2019/07/secure-rest-api-in-nodejs-18f43b3033c239da5d2525cfd9fdc98f.png",alt:"Logo"}})]),e._v(" "),o("h2",{attrs:{id:"principales-ideas"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#principales-ideas"}},[e._v("#")]),e._v(" Principales ideas")]),e._v(" "),o("h3",{attrs:{id:"adapta-a-tu-problema"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#adapta-a-tu-problema"}},[e._v("#")]),e._v(" Ad치pta a tu problema")]),e._v(" "),o("p",[e._v("Div칤dela por capas, usa por ejemplo el patr칩n MVC, que en NodeJS ofrece una arquitectura de f치cil implementaci칩n y extensi칩n de tu problema. Rutas 100% RESTfull, usa los verbos HTTP para realizar todas tus operaciones. Patr칩n de operaciones CRUD sobre recursos, podr치s a침adir, listar modificar o eliminar. Sube tus ficheros a tu servidor. Todo almacenando usando MongoDB.")]),e._v(" "),o("p",{staticStyle:{"text-align":"center"}},[o("img",{staticStyle:{"border-radius":"0.25rem"},attrs:{loading:"lazy",src:"https://topdev.vn/blog/wp-content/uploads/2019/04/restful-rest-diagram-api.jpg",alt:"Logo"}})]),e._v(" "),o("h3",{attrs:{id:"seguridad-ante-todo"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#seguridad-ante-todo"}},[e._v("#")]),e._v(" Seguridad ante todo")]),e._v(" "),o("p",[e._v("JSON Web Token (abreviado JWT) es un est치ndar abierto basado en JSON propuesto por IETF (RFC 7519) para la creaci칩n de tokens de acceso que permiten la propagaci칩n de identidad y privilegios. Adem치s hemos implementado la opci칩n de refresco de tokens para a침adir m치s funcionalidad.")]),e._v(" "),o("p",{staticStyle:{"text-align":"center"}},[o("img",{staticStyle:{"border-radius":"0.25rem"},attrs:{loading:"lazy",src:"https://rosolutions.com.mx/blog/wp-content/uploads/2018/11/1_g15QJL_ONdBGAdjgnld3pg.png",alt:"Logo"}})]),e._v(" "),o("h3",{attrs:{id:"ci-cd"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#ci-cd"}},[e._v("#")]),e._v(" CI/CD")]),e._v(" "),o("p",[e._v("Compila, prueba, despliega. Solo haz clic. Mejora tu productividad aplicando integraci칩n y despliegue continuo (CI/CD). Usaremos GitHub Actions para crear un flujo de trabajo y compilar, realizar el an치lisis de c칩digo est치tico y ejecutar pruebas autom치ticas para detecci칩n temprana de errores y finalmente desplegar de todo el proyecto en Heroku y DockerHub.")]),e._v(" "),o("p",{staticStyle:{"text-align":"center"}},[o("img",{staticStyle:{"border-radius":"0.25rem"},attrs:{loading:"lazy",src:"https://www.siliconweek.com/wp-content/uploads/2019/03/1EBXc9eJ1YRFLtkNI_djaAw.png",alt:"Logo"}})]),e._v(" "),o("h3",{attrs:{id:"la-nube-es-tu-amiga"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#la-nube-es-tu-amiga"}},[e._v("#")]),e._v(" La nube es tu amiga")]),e._v(" "),o("p",[e._v("No importas donde est칠s. Yo estar칠 all칤. No te limites a implementar en un solo lugar, usa la nube para un desarrollo cont칤nuo y descentralizado. Usa MongoDB Atlas, Firebase, Amaz칩n AWS, GitHub como repositorio de c칩digo, pruebas unitarias automatizadas. Heroku y DockerHub para su despliegue. Si no tienes cliente, puedes usar Postman. Todo esto ayudar치 a mejorar tu productividad. No importa donde est칠s, simplemente desarrolla tu API para que est칠 siempre disponible.")]),e._v(" "),o("p",{staticStyle:{"text-align":"center"}},[o("img",{staticStyle:{"border-radius":"0.25rem"},attrs:{loading:"lazy",src:"https://freepngimg.com/thumb/cloud_computing/23593-5-cloud-computing-free-download.png",alt:"Logo"}})]),e._v(" "),o("h2",{attrs:{id:"nodemonrest"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#nodemonrest"}},[e._v("#")]),e._v(" NodeMonREST")]),e._v(" "),o("p",[e._v("Ejemplo de "),o("a",{attrs:{href:"https://nodemonrest.herokuapp.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("API REST"),o("OutboundLink")],1),e._v(" en NodeJS, usando Mongo, JWT y AWS S3 con CI/CD bajo GitHub Actions para fines docentes.")]),e._v(" "),o("p",{staticStyle:{"text-align":"center"}},[o("img",{staticStyle:{"border-radius":"0.25rem"},attrs:{loading:"lazy",src:"https://github.com/joseluisgs/NodeMonRest/workflows/NodeMonRest%20CI/CD/badge.svg",alt:"Logo"}}),e._v(" "),o("img",{staticStyle:{"border-radius":"0.25rem"},attrs:{loading:"lazy",src:"https://img.shields.io/badge/Docker-passing-blue",alt:"Logo"}}),e._v(" "),o("img",{staticStyle:{"border-radius":"0.25rem"},attrs:{loading:"lazy",src:"https://img.shields.io/badge/Heroku-passing-blueviolet",alt:"Logo"}}),e._v(" "),o("img",{staticStyle:{"border-radius":"0.25rem"},attrs:{loading:"lazy",src:"https://img.shields.io/github/v/release/joseluisgs/NodeMonRest",alt:"Logo"}}),e._v(" "),o("img",{staticStyle:{"border-radius":"0.25rem"},attrs:{loading:"lazy",src:"https://img.shields.io/github/license/joseluisgs/NodeMonRest",alt:"Logo"}}),e._v(" "),o("img",{staticStyle:{"border-radius":"0.25rem"},attrs:{loading:"lazy",src:"https://img.shields.io/badge/JS%20Code-ES2019-yellow",alt:"Logo"}}),e._v(" "),o("img",{staticStyle:{"border-radius":"0.25rem"},attrs:{loading:"lazy",src:"https://img.shields.io/badge/JS%20Style-AirBnB-ff69b4",alt:"Logo"}})]),e._v(" "),o("h3",{attrs:{id:"descripcion"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#descripcion"}},[e._v("#")]),e._v(" Descripci칩n")]),e._v(" "),o("p",[e._v("Este proyecto tiene nombre de Pokemon 游땎. El objetivo principal docente es aplicar distintas t칠cnicas para construir un esqueleto de API REST usable en distintos proyectos. La idea es hacer un esqueleto lo suficientemente gen칠rico, adaptable y extensible en m칩dulos para ser aplicado en distintos problemas y con 칠l resolver cuestiones que se nos pueden presentar gen칠ricas en cada uno de ellos, con el objetivo de mostrar para el 치mbito docente como poder realizarlo. Es una aplicaci칩n puramente docente. Entre las distintas t칠cnicas usadas:")]),e._v(" "),o("ul",[o("li",[e._v("Distribuci칩n de los elementos del sistema. Tenemos distribu칤dos en distintos nodos cada uno de los componentes cruciales del sistema: c칩digo, informaci칩n y almacenamiento de ficheros.")]),e._v(" "),o("li",[e._v("Patr칩n "),o("a",{attrs:{href:"https://es.wikipedia.org/wiki/Modelo%E2%80%93vista%E2%80%93controlador",target:"_blank",rel:"noopener noreferrer"}},[e._v("MVC"),o("OutboundLink")],1),e._v(". La vista ser치 cualquier cliente que consuma nuestra API.")]),e._v(" "),o("li",[o("a",{attrs:{href:"https://lemoncode.net/lemoncode-blog/2018/1/29/javascript-asincrono",target:"_blank",rel:"noopener noreferrer"}},[e._v("As칤ncron칤a"),o("OutboundLink")],1),e._v(" y respuesta a Eventos. Uso de promesas e interacci칩n basada en eventos que es uno de los aspectos m치s fuertes de Node.js.")]),e._v(" "),o("li",[e._v("Acceso a bases de datos NoSQL usando Mongo DB.")]),e._v(" "),o("li",[e._v("Autenticaci칩n y autorizaci칩n usando "),o("a",{attrs:{href:"https://jwt.io/introduction/",target:"_blank",rel:"noopener noreferrer"}},[e._v("JWT"),o("OutboundLink")],1),e._v(".")]),e._v(" "),o("li",[e._v("Autorizaci칩n basada en permisos de usuario.")]),e._v(" "),o("li",[e._v("Manejo de "),o("a",{attrs:{href:"https://developer.mozilla.org/es/docs/Web/HTTP/Access_control_CORS",target:"_blank",rel:"noopener noreferrer"}},[e._v("CORS"),o("OutboundLink")],1)]),e._v(" "),o("li",[e._v("Algunos "),o("a",{attrs:{href:"https://sourcemaking.com/design_patterns",target:"_blank",rel:"noopener noreferrer"}},[e._v("patrones de dise침o"),o("OutboundLink")],1),e._v(" conocidos.")]),e._v(" "),o("li",[e._v("JS C칩digo "),o("a",{attrs:{href:"https://www.ecma-international.org/ecma-262/",target:"_blank",rel:"noopener noreferrer"}},[e._v("ECMA2019"),o("OutboundLink")],1),e._v(". De esta manera nos aseguramos seguir los est치ndares marcados para este tipo de lenguaje, pero tratando los m칩dulos como indica Node.js, usando Babel para compatibilidad. Adem치s se ha aplicado el estilo"),o("a",{attrs:{href:"https://airbnb.io/javascript/",target:"_blank",rel:"noopener noreferrer"}},[e._v("AirBnB"),o("OutboundLink")],1),e._v(" uno de los m치s seguidos con el objetivo de mantener una filosof칤a de sint치xis y estilo de programaci칩n ampliamente seguida en la comunidad JS/Node.")]),e._v(" "),o("li",[e._v("Almacenamiento en la nube usando "),o("a",{attrs:{href:"https://aws.amazon.com/es/",target:"_blank",rel:"noopener noreferrer"}},[e._v("AWS"),o("OutboundLink")],1),e._v(".")]),e._v(" "),o("li",[e._v("Desarrollo "),o("a",{attrs:{href:"https://www.redhat.com/es/topics/devops/what-is-ci-cd",target:"_blank",rel:"noopener noreferrer"}},[e._v("CI/CD"),o("OutboundLink")],1),e._v(" usando "),o("a",{attrs:{href:"https://github.com/features/actions",target:"_blank",rel:"noopener noreferrer"}},[e._v("GitHub Actions"),o("OutboundLink")],1),e._v(".")])]),e._v(" "),o("p",{staticStyle:{"text-align":"center"}},[o("img",{staticStyle:{"border-radius":"0.25rem"},attrs:{loading:"lazy",src:"https://danielpecos.com/assets/2017/09/swaggerfornodejs.jpg",alt:"Logo"}})]),e._v(" "),o("h3",{attrs:{id:"tecnologias-y-librerias-usadas"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#tecnologias-y-librerias-usadas"}},[e._v("#")]),e._v(" Tecnolog칤as y librer칤as usadas")]),e._v(" "),o("div",{staticClass:"custom-block warning"},[o("p",{staticClass:"title"},[e._v("Atenci칩n")]),o("p",[e._v("Este proyecto tiene algo de antig칲edad y puede que las librer칤as est칠n desuso. Te recomiendo eches un ojo en "),o("a",{attrs:{href:"#typescrip-api-rest"}},[e._v("TypeScrip API REST")]),e._v(" porque siguiendo esta misma filosof칤a puedes ver una versi칩n m치s moderna en el uso de librer칤as, organizaci칩n de c칩digo y distintas versiones de persistencia de la informaci칩n")])]),o("ul",[o("li",[o("a",{attrs:{href:"https://nodejs.org/es/",target:"_blank",rel:"noopener noreferrer"}},[e._v("NodeJS"),o("OutboundLink")],1),e._v(". JS en Servidor.")]),e._v(" "),o("li",[o("a",{attrs:{href:"https://www.mongodb.com/es",target:"_blank",rel:"noopener noreferrer"}},[e._v("Mongo DB"),o("OutboundLink")],1),e._v(". He usado su versi칩n en la nube "),o("a",{attrs:{href:"https://www.mongodb.com/cloud/atlas",target:"_blank",rel:"noopener noreferrer"}},[e._v("Atlas"),o("OutboundLink")],1)]),e._v(" "),o("li",[o("a",{attrs:{href:"https://expressjs.com/es/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Express"),o("OutboundLink")],1),e._v(". Framework de aplicaciones web para la API. Con ellos creo y gestiono las rutas. Adem치s nos permite f치cilmente crear middlewares, con lo cual podremos aplicar logs espec칤ficos, filtrar para autorizaciones y autenticaciones y ampliar mediante middleware. Es lo que m치s me gusta de esta librer칤a. Te recomiendo mirar el c칩digo de los ficheros route y middleware para ver como realizo estas acciones. Una de las cosas importantes es como he creado el servidor para que pueda ser levantado como instancia en cada una de las pruebas.")]),e._v(" "),o("li",[o("a",{attrs:{href:"https://mongoosejs.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Mongoose"),o("OutboundLink")],1),e._v(". Conjunto de librer칤as para operar con bases de dato MongoDB. He implementado el acceso usando singlet칩n.")]),e._v(" "),o("li",[o("a",{attrs:{href:"https://www.npmjs.com/package/jwt-simple",target:"_blank",rel:"noopener noreferrer"}},[e._v("JWT-Simple"),o("OutboundLink")],1),e._v(". Para implementar la atenticaci칩n basada en JWT. Esta librer칤a act칰a en base a middleware con Express. Los propios tokens que caducan dependiendo del valor de .env TOKEN_LIFE en minutos. Para la parte de autorizaci칩n, tambi칠n los hemos encapsulado en ellos los permisos de usuario que tengan. Tambi칠n hemos usado el "),o("a",{attrs:{href:"https://auth0.com/blog/refresh-tokens-what-are-they-and-when-to-use-them/",target:"_blank",rel:"noopener noreferrer"}},[e._v("refresco de tokens"),o("OutboundLink")],1),e._v(", en base a UUID almacenando los tokens de refresco en MongoDB con un 칤ndice TTL de la colecci칩n en base al valor de .env TOKEN_REFRESH en minutos. De esta manera se autodestruyen pasado ese tiempo y libera el tokens de refresco asociado al token de usuario, dando un poco de seguridad extra. El objetivo de implementar este tipo de token de refresco es que si el access token tiene fecha de expiraci칩n, una vez que caduca, el usuario tendr칤a que autenticarse de nuevo para obtener un access token. Con el refresh token, este paso se puede saltar y con una petici칩n al API obtener un nuevo access token que permita al usuario seguir accediendo a los recursos de la aplicaci칩n, hasta que el refresh token caduque. Se debe tener en cuenta que el TTL del Token de autentificaci칩n debe ser menor que el de refresco.")]),e._v(" "),o("li",[o("a",{attrs:{href:"https://www.npmjs.com/package/bcrypt",target:"_blank",rel:"noopener noreferrer"}},[e._v("BCrypt"),o("OutboundLink")],1),e._v(". Librer칤a de criptograf칤a para manejar las contrase침as de los usuarios.")]),e._v(" "),o("li",[o("a",{attrs:{href:"https://www.npmjs.com/package/body-parser",target:"_blank",rel:"noopener noreferrer"}},[e._v("Body Parser"),o("OutboundLink")],1),e._v(". Middleware que parsea los body como objetos (ya no se utilza pero cuando hice este proyecto s칤, puedes mirar "),o("a",{attrs:{href:"#typescrip-api-rest"}},[e._v("el ejemplo con Typescript")]),e._v(" siguiente para ver otras opciones).")]),e._v(" "),o("li",[o("a",{attrs:{href:"https://www.npmjs.com/package/cors",target:"_blank",rel:"noopener noreferrer"}},[e._v("Cors"),o("OutboundLink")],1),e._v(". Middleware para manejo de "),o("a",{attrs:{href:"https://developer.mozilla.org/es/docs/Web/HTTP/Access_control_CORS",target:"_blank",rel:"noopener noreferrer"}},[e._v("CORS"),o("OutboundLink")],1),e._v(".")]),e._v(" "),o("li",[o("a",{attrs:{href:"https://www.npmjs.com/package/dotenv",target:"_blank",rel:"noopener noreferrer"}},[e._v("Dotenv"),o("OutboundLink")],1),e._v(". Para leer las variables de entorno del fichero .env")]),e._v(" "),o("li",[o("a",{attrs:{href:"https://www.npmjs.com/package/morgan",target:"_blank",rel:"noopener noreferrer"}},[e._v("Morgan"),o("OutboundLink")],1),e._v(". Middleware Request logger el cual nos permitir치 sacar logs de nuestras peticiones HTTP.")]),e._v(" "),o("li",[o("a",{attrs:{href:"https://www.npmjs.com/package/uuid",target:"_blank",rel:"noopener noreferrer"}},[e._v("UUID"),o("OutboundLink")],1),e._v(". Implementa el RFC4122 UUIDs para los tokens de refresco.")]),e._v(" "),o("li",[o("a",{attrs:{href:"https://www.npmjs.com/package/express-fileupload",target:"_blank",rel:"noopener noreferrer"}},[e._v("Express-fileupload"),o("OutboundLink")],1),e._v(". Es un middleware para Express el cual nos ayuda a procesar peticiones multipart o subida de im치genes. Se ha puesto que el tama침o m치ximo por imagen sea 2MB aunque se puede cambiar el el fichero .env. Los directorios para almacenar im치genes o ficheros est치n en .env, puedes poner el mismo o lo que quieras, pues se crean din치micamente dentro de public/uploads (FILES_PATH) y accesible directamente por la ruta url/files (FILES_URL). Puedes ponerle el mismo si quieres.")]),e._v(" "),o("li",[o("a",{attrs:{href:"https://aws.amazon.com/es/",target:"_blank",rel:"noopener noreferrer"}},[e._v("AWS"),o("OutboundLink")],1),e._v(" Se ha implementado el sistema de almacenamiento en a nube para no depender localmente del servidor. Si quieres la versi칩n en el servidor revisa "),o("a",{attrs:{href:"https://github.com/joseluisgs/NodeMonRest/tree/Ficheros_Locales",target:"_blank",rel:"noopener noreferrer"}},[e._v("esta rama"),o("OutboundLink")],1),e._v(". La idea de usar este tipo de tecnolog칤as es aprender a usar almacenamiento en la nube siguiendo la folosof칤a de distribuci칩n de cada uno de los elementos del sistema: c칩digo, bases de datos y ficheros.")]),e._v(" "),o("li",[o("a",{attrs:{href:"https://www.npmjs.com/package/@hapi/joi",target:"_blank",rel:"noopener noreferrer"}},[e._v("Joi"),o("OutboundLink")],1),e._v(". Nos sirve para validar los datos de entrada en base a un esquema de validaci칩n, por si no lo usamos en los propios esquemas de mongo la validaci칩n. Es importante que el back valide todos los datos por si se ha escapado algo del Front. No podemos dejar nada a la surte. 춰Luke, somos la 칰ltima esperanza!")]),e._v(" "),o("li",[o("a",{attrs:{href:"https://www.npmjs.com/package/mongoose-unique-validator",target:"_blank",rel:"noopener noreferrer"}},[e._v("Mongoose-unique-validator"),o("OutboundLink")],1),e._v(". Nos sirve para validar los campos unique. Act칰a como middleware.")]),e._v(" "),o("li",[o("a",{attrs:{href:"https://www.npmjs.com/package/underscore",target:"_blank",rel:"noopener noreferrer"}},[e._v("Underscore"),o("OutboundLink")],1),e._v(". Nos permite extender las posibilidades de la programaci칩n funcional para algunos m칠todos.")]),e._v(" "),o("li",[o("a",{attrs:{href:"https://www.npmjs.com/package/express-handlebars",target:"_blank",rel:"noopener noreferrer"}},[e._v("Express-handlebars"),o("OutboundLink")],1),e._v(". Personalmente uno de los mejores motores de plantillas para NodeJS, basado en "),o("a",{attrs:{href:"https://handlebarsjs.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Handlebars"),o("OutboundLink")],1),e._v(". Lo he usado de ejemplo para hacer algunas p치ginas est치ticas de presentaci칩n de la API.")]),e._v(" "),o("li",[o("a",{attrs:{href:"https://mochajs.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Mocha"),o("OutboundLink")],1),e._v(" y "),o("a",{attrs:{href:"https://www.chaijs.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Chai"),o("OutboundLink")],1),e._v(". Se han utilizado estas librer칤as para los test por su funcionalidad y porque se adaptan perfectamente al proceso de integraci칩n continua que se ha marcado como objetivo.")]),e._v(" "),o("li",[o("a",{attrs:{href:"https://babeljs.io/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Babel"),o("OutboundLink")],1),e._v(" y "),o("a",{attrs:{href:"https://eslint.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("ESLint"),o("OutboundLink")],1),e._v(" con el objetivo de construir un c칩digo ampliamente compatible y estandarizado de JS.")]),e._v(" "),o("li",[o("a",{attrs:{href:"https://github.com/features/actions",target:"_blank",rel:"noopener noreferrer"}},[e._v("GitHub Actions"),o("OutboundLink")],1),e._v(". Es una de las grandes herramientas que se ha usado para la integraci칩n/distribuci칩n continuas "),o("a",{attrs:{href:"https://www.redhat.com/es/topics/devops/what-is-ci-cd",target:"_blank",rel:"noopener noreferrer"}},[e._v("CI/CD"),o("OutboundLink")],1),e._v(". Para ello hemos integrado el entorno de ejecuci칩n con pruebas y el despliegue como docker en "),o("a",{attrs:{href:"https://hub.docker.com/r/joseluisgs/nodemonrest",target:"_blank",rel:"noopener noreferrer"}},[e._v("DockerHub"),o("OutboundLink")],1),e._v(" y su despliegue para su uso en "),o("a",{attrs:{href:"https://nodemonrest.herokuapp.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Heroku"),o("OutboundLink")],1),e._v(".")])]),e._v(" "),o("h3",{attrs:{id:"repositorio"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#repositorio"}},[e._v("#")]),e._v(" Repositorio")]),e._v(" "),o("div",{staticClass:"custom-block tip"},[o("p",{staticClass:"title"},[e._v("Proyecto disponible:")]),o("ul",[o("li",[o("a",{attrs:{href:"https://github.com/joseluisgs/NodeMonRest",target:"_blank",rel:"noopener noreferrer"}},[e._v("GitHub"),o("OutboundLink")],1),e._v(".")]),e._v(" "),o("li",[o("a",{attrs:{href:"https://nodemonrest.herokuapp.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Heroku"),o("OutboundLink")],1)]),e._v(" "),o("li",[o("a",{attrs:{href:"https://hub.docker.com/r/joseluisgs/nodemonrest",target:"_blank",rel:"noopener noreferrer"}},[e._v("DockerHub"),o("OutboundLink")],1)])])]),o("h2",{attrs:{id:"notas-back-nem"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#notas-back-nem"}},[e._v("#")]),e._v(" Notas-Back-NEM")]),e._v(" "),o("p",[e._v("Este proyecto tiene como objetivo hacer la parte de backend por capas de una aplicaci칩n de notas para consumirla con distintos clientes usando las tecnolog칤as de NodeJS, Mongo DB y Express y est치 basada en el proyecto NodeMonREST. Como implementaci칩n de almacenamiento se ha utilizado Google Firebase Cloud Storage.")]),e._v(" "),o("h3",{attrs:{id:"repositorio-2"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#repositorio-2"}},[e._v("#")]),e._v(" Repositorio")]),e._v(" "),o("div",{staticClass:"custom-block tip"},[o("p",{staticClass:"title"},[e._v("Proyecto disponible:")]),o("ul",[o("li",[o("a",{attrs:{href:"https://github.com/joseluisgs/notas-back-nem",target:"_blank",rel:"noopener noreferrer"}},[e._v("GitHub"),o("OutboundLink")],1),e._v(".")])])]),o("h2",{attrs:{id:"typescrip-api-rest"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#typescrip-api-rest"}},[e._v("#")]),e._v(" TypeScrip API REST")]),e._v(" "),o("p",[e._v("Ejemplo de un API REST realizada con TypeScript. Autenticaci칩n, CRUD, transferencia de ficheros. Modos de trabajo en: Memoria, MongoDB o MariaDB. Despliegue en Docker y test con Jest.")]),e._v(" "),o("p",{staticStyle:{"text-align":"center"}},[o("img",{staticStyle:{"border-radius":"0.25rem"},attrs:{loading:"lazy",src:"https://img.shields.io/badge/TypeScript-Ready-3178c6",alt:"Logo"}}),e._v(" "),o("img",{staticStyle:{"border-radius":"0.25rem"},attrs:{loading:"lazy",src:"https://img.shields.io/badge/Docker-Ready-2496ed",alt:"Logo"}}),e._v(" "),o("img",{staticStyle:{"border-radius":"0.25rem"},attrs:{loading:"lazy",src:"https://img.shields.io/badge/NodeJS-Ready-83BA63",alt:"Logo"}}),e._v(" "),o("img",{staticStyle:{"border-radius":"0.25rem"},attrs:{loading:"lazy",src:"https://img.shields.io/badge/JS%20Style-AirBnB-ff69b4",alt:"Logo"}}),e._v(" "),o("img",{staticStyle:{"border-radius":"0.25rem"},attrs:{loading:"lazy",src:"https://img.shields.io/github/license/joseluisgs/todo-native-script",alt:"Logo"}}),e._v(" "),o("img",{staticStyle:{"border-radius":"0.25rem"},attrs:{loading:"lazy",src:"https://img.shields.io/github/last-commit/joseluisgs/ts-api-rest",alt:"Logo"}})]),e._v(" "),o("h3",{attrs:{id:"descripcion-2"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#descripcion-2"}},[e._v("#")]),e._v(" Descripci칩n")]),e._v(" "),o("p",[e._v("El proyecto consiste en que tengas un ejemplo de API REST pero realizada con TypeScript con el objetivo de mejorar con tipos tus desarrollos. Adem치s propone el uso de ficheros, autenticaci칩n y autorizaci칩n mediante JWT. Tiene tres modos de uso Memoria, con MongoDB (NoSQL) y MariaDB (SQL). Acceso desde: http://localhost:8000.")]),e._v(" "),o("p",{staticStyle:{"text-align":"center"}},[o("img",{staticStyle:{"border-radius":"0.25rem"},attrs:{loading:"lazy",src:"https://res.cloudinary.com/practicaldev/image/fetch/s--06ezZhc0--/c_imagga_scale,f_auto,fl_progressive,h_900,q_auto,w_1600/https://dev-to-uploads.s3.amazonaws.com/i/cosh3nee9nkfwnsmpn9p.png",alt:"Logo"}})]),e._v(" "),o("h3",{attrs:{id:"arquitectura-y-diseno"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#arquitectura-y-diseno"}},[e._v("#")]),e._v(" Arquitectura y dise침o")]),e._v(" "),o("p",[e._v("El dise침o de esta API REST se corresponde con el patr칩n Servidor->Enrutador->Controlador->Modelo.\nEl Servidor escucha en un puesto diversas peticiones. Las procesa seg칰n su ruta o punto de entrada y se las pasa al Enrutador.\nEl Enrutador analiza la petici칩n dependiendo de la ruta y se la pasa al Controlador correspondiente a dicha ruta que ejecutar치 el m칠todo indicado.\nEl Controlador realiza el m칠todo indicado seg칰n la ruta consultando los modelos y almacenamiento para ello.\nEl Modelo es la estructuraci칩n de los datos a tratar.")]),e._v(" "),o("p",[e._v("En todo momento se ofrece informaci칩n de la petici칩n en base a los c칩digos de estado HTTP.")]),e._v(" "),o("h3",{attrs:{id:"modos-de-funcionamiento"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#modos-de-funcionamiento"}},[e._v("#")]),e._v(" Modos de funcionamiento")]),e._v(" "),o("p",[e._v("Este proyecto est치 basado en dos modos de funcionamiento en la url: http://localhost:8000.")]),e._v(" "),o("ul",[o("li",[e._v("Memoria: Usando almacenamiento en memoria. Lo tienes en la rama Memoria.")]),e._v(" "),o("li",[e._v("MogoDB: Usando almacenamiento en MogoDB. Lo tienes en la rama MongoDB.")]),e._v(" "),o("li",[e._v("MariaDB: Usando almacenamiento en MariaDB. Lo tienes en la rama MariaDB.")])]),e._v(" "),o("h3",{attrs:{id:"autenticacion-y-autorizacion-jwt-y-middleware"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#autenticacion-y-autorizacion-jwt-y-middleware"}},[e._v("#")]),e._v(" Autenticaci칩n y Autorizaci칩n: JWT y Middleware")]),e._v(" "),o("p",[e._v("Se ha implementado un sistema de atenticaci칩n y autorizaci칩n basado en JWT y aplicando un Middleware para analizar si el usuario puede entrar a un recurso, ya sea por que est치 autenticado para ello (auth), o tiene permisos dependiendo su rol (grant), o dicho recurso le pertenece, si tenemos datos que los relacionen (owner). Se ha jugado con distintas pol칤ticas dependiendo del recurso y se puede adaptar a las distintas necesidades del problema. En el c칩digo podr치s ver distintas soluciones con middleware o dentro del controlador.")]),e._v(" "),o("h3",{attrs:{id:"validadores-de-datos"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#validadores-de-datos"}},[e._v("#")]),e._v(" Validadores de datos")]),e._v(" "),o("p",[e._v("Se ha implemedo dos sistemas de validaci칩n de campos seg칰n los requisitos de los tipos de datos. Por un lado un middleware de validaci칩n y por otro, si no queremos hacerlo de esta manera, con funciones auxiliares en el propio controlador.")]),e._v(" "),o("h3",{attrs:{id:"endpoints"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#endpoints"}},[e._v("#")]),e._v(" EndPoints")]),e._v(" "),o("p",[e._v("Los Endpoints para conectarse y consumir esta api rest, empiezan siempre por /api/vx/recurso, donde x es a versi칩n de esta api, y recurso es el recurso a consumir, por ejemplo /api/v1/juegos desde http://localhost:8000.")]),e._v(" "),o("table",[o("thead",[o("tr",[o("th",[e._v("M칠todo")]),e._v(" "),o("th",[e._v("Recurso")]),e._v(" "),o("th",[e._v("Auten/Autor.")]),e._v(" "),o("th",[e._v("Descripci칩n")])])]),e._v(" "),o("tbody",[o("tr",[o("td",[e._v("POST")]),e._v(" "),o("td",[e._v("user/register")]),e._v(" "),o("td",[e._v("--")]),e._v(" "),o("td",[e._v("Registra un usuario/a")])]),e._v(" "),o("tr",[o("td",[e._v("POST")]),e._v(" "),o("td",[e._v("user/login")]),e._v(" "),o("td",[e._v("--")]),e._v(" "),o("td",[e._v("Se indentifica en el sistema y obtiene token de acceso")])]),e._v(" "),o("tr",[o("td",[e._v("GET")]),e._v(" "),o("td",[e._v("/user/id")]),e._v(" "),o("td",[e._v("auth")]),e._v(" "),o("td",[e._v("Obtiene los datos del usuario/a con id indicado si pertenece a 칠l/ella")])]),e._v(" "),o("tr",[o("td",[e._v("PUT")]),e._v(" "),o("td",[e._v("/user/id")]),e._v(" "),o("td",[e._v("auth")]),e._v(" "),o("td",[e._v("Modifica los datos del usuario/a con id indicado si pertenecen a 칠l/ella")])]),e._v(" "),o("tr",[o("td",[e._v("DELETE")]),e._v(" "),o("td",[e._v("/user/id")]),e._v(" "),o("td",[e._v("auth")]),e._v(" "),o("td",[e._v("Elimina el usuario/a con id indicado si pertenecen a 칠l/ella")])]),e._v(" "),o("tr",[o("td",[e._v("GET")]),e._v(" "),o("td",[e._v("/juegos")]),e._v(" "),o("td",[e._v("--")]),e._v(" "),o("td",[e._v("Obtiene todos las juegos")])]),e._v(" "),o("tr",[o("td",[e._v("GET")]),e._v(" "),o("td",[e._v("/juegos/id")]),e._v(" "),o("td",[e._v("--")]),e._v(" "),o("td",[e._v("Obtiene el juego con el id indicado")])]),e._v(" "),o("tr",[o("td",[e._v("POST")]),e._v(" "),o("td",[e._v("/juegos")]),e._v(" "),o("td",[e._v("auth")]),e._v(" "),o("td",[e._v("A침ade el juego")])]),e._v(" "),o("tr",[o("td",[e._v("PUT")]),e._v(" "),o("td",[e._v("/juegos/id")]),e._v(" "),o("td",[e._v("auth, owner")]),e._v(" "),o("td",[e._v("Modifica el juego con el id indicado si pertenece al usuario/a")])]),e._v(" "),o("tr",[o("td",[e._v("DELETE")]),e._v(" "),o("td",[e._v("/juegos/id")]),e._v(" "),o("td",[e._v("auth")]),e._v(" "),o("td",[e._v("Elimina el juego con el id indicado si pertenece al usuario/a")])]),e._v(" "),o("tr",[o("td",[e._v("GET")]),e._v(" "),o("td",[e._v("/files")]),e._v(" "),o("td",[e._v("auth, grant('ADMIN')")]),e._v(" "),o("td",[e._v("Obtiene todos los ficheros. Solo Admin")])]),e._v(" "),o("tr",[o("td",[e._v("GET")]),e._v(" "),o("td",[e._v("/files/id")]),e._v(" "),o("td",[e._v("auth")]),e._v(" "),o("td",[e._v("Obtiene datos del fichero con el id indicado si pertenece al usuario/a")])]),e._v(" "),o("tr",[o("td",[e._v("GET")]),e._v(" "),o("td",[e._v("/files/download/id")]),e._v(" "),o("td",[e._v("--")]),e._v(" "),o("td",[e._v("Descarga el fichero con el id indicado")])]),e._v(" "),o("tr",[o("td",[e._v("POST")]),e._v(" "),o("td",[e._v("/files")]),e._v(" "),o("td",[e._v("auth")]),e._v(" "),o("td",[e._v("A침ade el fichero")])]),e._v(" "),o("tr",[o("td",[e._v("PUT")]),e._v(" "),o("td",[e._v("/files/id")]),e._v(" "),o("td",[e._v("auth")]),e._v(" "),o("td",[e._v("Modifica el fichero con el id indicado si pertenece al usuario/a")])]),e._v(" "),o("tr",[o("td",[e._v("DELETE")]),e._v(" "),o("td",[e._v("/files/id")]),e._v(" "),o("td",[e._v("auth")]),e._v(" "),o("td",[e._v("Elimina el fichero con el id indicado si pertenece al usuario/a")])])])]),e._v(" "),o("h3",{attrs:{id:"tdd-jest"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#tdd-jest"}},[e._v("#")]),e._v(" TDD: JEST")]),e._v(" "),o("p",[e._v("Se ha usado la librer칤a Jest, con TypeScript para realizar los test siguiendo un enfoque TDD y Supertest para testear las peticiones HTTP a la API.")]),e._v(" "),o("h3",{attrs:{id:"repositorio-3"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#repositorio-3"}},[e._v("#")]),e._v(" Repositorio")]),e._v(" "),o("div",{staticClass:"custom-block tip"},[o("p",{staticClass:"title"},[e._v("Proyecto disponible")]),o("ul",[o("li",[o("a",{attrs:{href:"https://github.com/joseluisgs/ts-api-rest",target:"_blank",rel:"noopener noreferrer"}},[e._v("GitHub"),o("OutboundLink")],1),e._v(".")]),e._v(" "),o("li",[o("a",{attrs:{href:"https://hub.docker.com/r/joseluisgs/ts-api-rest",target:"_blank",rel:"noopener noreferrer"}},[e._v("DockerHub"),o("OutboundLink")],1)])])])])}),[],!1,null,null,null);a.default=r.exports}}]);